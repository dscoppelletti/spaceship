buildscript {
    apply from: '../gradle-plugins/versionMap.gradle'
    repositories {
        jcenter()

        if (project.hasProperty('it.scoppelletti.tools.devRepoUrl')) {
            maven {
                url project.property('it.scoppelletti.tools.devRepoUrl')
            }
        }
    }
    dependencies {
        classpath "com.github.ben-manes:gradle-versions-plugin:${versionMap.gradle_versions}"
        classpath "it.scoppelletti.spaceship:spaceship-gradle-java:${versionMap.spaceship}"
        classpath "org.jetbrains.dokka:dokka-gradle-plugin:${versionMap.dokka}"
    }
}

plugins {
    id 'java-library'
    id 'org.jetbrains.kotlin.jvm' version '1.3.61'
}

apply plugin: 'com.github.ben-manes.versions'
apply plugin: 'kotlin-kapt'
apply plugin: 'org.jetbrains.dokka'
apply plugin: 'it.scoppelletti.spaceship.spaceship-gradle-java'

group 'it.scoppelletti.spaceship'
version versionMap.spaceship
description 'Spaceship Standard Library'
archivesBaseName = 'spaceship-stdlib'

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

compileKotlin {
    kotlinOptions.jvmTarget = JavaVersion.VERSION_1_8.toString()
}
compileTestKotlin {
    kotlinOptions.jvmTarget = JavaVersion.VERSION_1_8.toString()
}

spaceship {
    inceptionYear = '2019'
}

repositories {
    jcenter()
    mavenCentral()

    if (project.hasProperty('it.scoppelletti.tools.devRepoUrl')) {
        maven {
            url project.property('it.scoppelletti.tools.devRepoUrl')
        }
    }
}

dependencies {
    api "com.google.dagger:dagger:${versionMap.dagger}"
    kapt "com.google.dagger:dagger-compiler:${versionMap.dagger}"
    api "com.squareup.okio:okio:${versionMap.okio}"
    api "org.jetbrains.kotlin:kotlin-stdlib-jdk8:${versionMap.kotlin}"
    api "org.jetbrains.kotlinx:kotlinx-coroutines-core:${versionMap.kotlinx_coroutines}"
    api "org.threeten:threetenbp:${versionMap.threetenbp}:no-tzdb"
    implementation "io.github.microutils:kotlin-logging:${versionMap.kotlin_logging}"
    implementation "org.slf4j:slf4j-api:${versionMap.slf4j}"
    testImplementation "junit:junit:${versionMap.junit}"
    testImplementation "org.jetbrains.kotlin:kotlin-test:${versionMap.kotlin}"
    testImplementation "org.jetbrains.kotlin:kotlin-test-junit:${versionMap.kotlin}"
    testRuntimeOnly "org.slf4j:slf4j-simple:${versionMap.slf4j}"
}
