apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply from: '../../gradle-plugins/common.gradle'

ext.adsConsentVersion = '1.0.7'

android {
    compileSdkVersion versionMap.sdk_target
    buildToolsVersion versionMap.build_tools
    defaultConfig {
        applicationId "it.scoppelletti.consent.sample"
        minSdkVersion versionMap.sdk_min
        targetSdkVersion versionMap.sdk_target
        multiDexEnabled true
        versionCode 1
        versionName adsConsentVersion
        vectorDrawables.useSupportLibrary = true
        if (project.hasProperty('ads.publisherId')) {
            buildConfigField 'String', 'ADS_PUBLISHERID',
                    '"' + project.property('ads.publisherId') + '"'
        } else {
            buildConfigField 'String', 'ADS_PUBLISHERID', '"N/D"'
        }
        if (project.hasProperty('ads.adAppId')) {
            buildConfigField 'String', 'ADS_APPID',
                    '"' + project.property('ads.adAppId') + '"'
            manifestPlaceholders =
                    [ adsAppId : project.property('ads.adAppId') ]
        } else {
            buildConfigField 'String', 'ADS_APPID', '"N/D"'
        }
        if (project.hasProperty('ads.adUnitId')) {
            buildConfigField 'String', 'ADS_UNITID',
                    '"' + project.property('ads.adUnitId') + '"'
        } else {
            buildConfigField 'String', 'ADS_UNITID', '"N/D"'
        }
    }
    buildTypes {
        debug {
            minifyEnabled false
            useProguard false
            debuggable true
        }
        release {
            // ProGuard fails!
            minifyEnabled false
            useProguard false
            debuggable false
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }
}

dependencies {
    implementation project(':lib')
    implementation "androidx.annotation:annotation:${versionMap.androidx_annotation}"
    implementation "androidx.appcompat:appcompat:${versionMap.androidx_appcompat}"
    implementation "androidx.browser:browser:${versionMap.androidx_browser}"
    implementation "androidx.multidex:multidex:${versionMap.androidx_multidex}"
    implementation "com.google.android.ads.consent:consent-library:${adsConsentVersion}"
    implementation "com.google.android.material:material:${versionMap.androidx_material}"
    implementation "com.google.firebase:firebase-ads:${versionMap.firebase_ads}"
    implementation "com.google.firebase:firebase-core:${versionMap.firebase_core}"
    implementation "io.github.microutils:kotlin-logging:${versionMap.kotlin_logging}"
    implementation("it.scoppelletti.spaceship:spaceship:${versionMap.spaceship}") {
        changing = true
    }
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:${versionMap.kotlin}"
    runtimeOnly "com.noveogroup.android:android-logger:${versionMap.android_logger}"
}

apply plugin: 'com.google.gms.google-services'

